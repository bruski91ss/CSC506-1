# Module 5 Discussion

import time
import matplotlib.pyplot as plt


class HashTable:
    def __init__(self, size):
        self.table = [[] for _ in range(size)]

    def hash(self, key):
        return key % len(self.table)

    def put(self, key, value):
        hash_index = self.hash(key)
        for i, item in enumerate(self.table[hash_index]):
            if item[0] == key:
                self.table[hash_index][i] = (key, value)
                return
        self.table[hash_index].append((key, value))

    def get(self, key):
        hash_index = self.hash(key)
        for k, v in self.table[hash_index]:
            if k == key:
                return v
        return None


students = [(12345, "John Smith"),

            (67890, "Jane Doe"),

            (54321, "Alice Johnson"),

            (98765, "Bob Williams"),

            (24680, "Eve Brown"),

            (13579, "Charlie Davis"),

            (11223, "Grace Wilson"),

            (44556, "David Lee"),

            (99999, "Olivia Martinez"),

            (77777, "Sophia Anderson")]


def example_hashtable():
    student_hashtable = HashTable(10)
    for student_id, student_name in students:
        student_hashtable.put(student_id, student_name)
    start_time = time.time()
    for _ in range(1000):
        for student_id in [s[0] for s in students]:
            student_hashtable.get(student_id)
    return time.time() - start_time


def example_dictionary():
    students_dictionary = {student_id: student_name for student_id, student_name in students}
    start_time = time.time()
    for _ in range(1000):
        for student_id in [s[0] for s in students]:
            students_dictionary[student_id]
    return time.time() - start_time


student_ids = [12345, 67890, 54321, 98765, 24680, 13579, 11223, 44556, 99999, 77777]

iterations = list(range(1, 1001, 10))
hash_table_times = []
dict_times = []

for i in iterations:
    hash_table_time = example_hashtable()
    hash_table_times.append(hash_table_time)

    dict_time = example_dictionary()
    dict_times.append(dict_time)

plt.plot(iterations, hash_table_times, label="Hash Table")
plt.plot(iterations, dict_times, label="Dictionary")
plt.xlabel("Iterations")
plt.ylabel("Avg Time (Sec)")
plt.title("Time Comparison: Hash Table & Dictionary")
plt.legend()
plt.show()
